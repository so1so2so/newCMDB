列表推导排序是key的用法:
>>> a = [[1,'d'],[8,'c'],[20,'c']]
>>> sorted(a ,key=lambda a:a[0])
[[1, 'd'], [8, 'c'], [20, 'c']]
#lambda函数自动定义里面的项。
>>> students = [('john','A',15),('jane','b',12),('dave','B',10)]
>>> sorted(students,key=lambda student:student[2])
[('dave', 'B', 10), ('jane', 'b', 12), ('john', 'A', 15)]

key值表示里面里面有多个选项，需要去第几个值。
下面看一下字典的取法：
{'1503200855': u'601', '1503200849': u'604', '1503200848': u'603', '1503200854': u'605', '1503200852': u'605', '1503200853': u'608', '1503200850': u'606', '1503200851': u'605', '1503200856': u'600', '1503200857': u'576', '1503200847': u'547', '1503200846': u'603'}

这样一个字典，首先转换成列表:
stats=[[(k),int(v)] for k,v in ones.items()]
列表效果:
[['1503200921', 605], ['1503200855', 601], ['1503200920', 600], ['1503200900', 604], ['1503200849', 604], ['1503200848', 603], ['1503200858', 607], ['1503200859', 606], ['1503200854', 605], ['1503200852', 605], ['1503200853', 608], ['1503200850', 606], ['1503200851', 605], ['1503200856', 600], ['1503200857', 604], ['1503200847', 547], ['1503200846', 603]]
然后根据key值进行排序:
sor = sorted(stats,key=lambda stats:stats[0])   #根据里面第零个值做排序

效果：
[['1503200846', 603], ['1503200847', 547], ['1503200848', 603], ['1503200849', 604], ['1503200850', 606], ['1503200851', 605], ['1503200852', 605], ['1503200853', 608], ['1503200854', 605], ['1503200855', 601], ['1503200856', 600], ['1503200857', 604], ['1503200858', 607], ['1503200859', 606], ['1503200900', 604], ['1503200920', 600], ['1503200921', 605]]

